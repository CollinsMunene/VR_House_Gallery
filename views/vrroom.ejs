<html>
  <head>
    <script src="https://aframe.io/releases/1.0.3/aframe.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.slim.js"></script>
    <!-- render-order script -->
    <script src="https://unpkg.com/aframe-render-order-component@1.0.0/dist/aframe-render-order-component.min.js"></script> 
    <!-- layout script -->
    <script src="https://unpkg.com/aframe-layout-component@4.3.1/dist/aframe-layout-component.min.js"></script> 
    <!-- aframe network script -->
    <script src="https://unpkg.com/networked-aframe/dist/networked-aframe.min.js"></script>
    <!-- aframe menu script -->
    <script src="https://rawgit.com/kfarr/aframe-select-bar-component/master/dist/aframe-select-bar-component.min.js"></script>
    <!-- aframe GUI script -->
    <script src="https://rawgit.com/rdub80/aframe-gui/master/dist/aframe-gui.min.js"></script>
    <!-- connect to socket.io -->
    <script defer src="http://localhost:3000/socket.io/socket.io.js"></script>
    <!-- teleport script -->
    <script src="https://rawgit.com/fernandojsg/aframe-teleport-controls/master/dist/aframe-teleport-controls.min.js"></script> 
    <!-- randomizer script -->
    <script src="https://unpkg.com/aframe-randomizer-components@^3.0.1/dist/aframe-randomizer-components.min.js"></script>
    <!-- slideshow component -->
    <script src="https://unpkg.com/aframe-slideshow-component/dist/aframe-slideshow-component.min.js"></script>
    <!-- <script defer src="/javascripts/main.js"></script>  -->
    <!-- <script src="https://unpkg.com/naf-easyrtc-adapter/dist/naf-easyrtc-adapter.min.js"></script>  -->
    <script src="https://unpkg.com/aframe-template-component@3.2.1/dist/aframe-template-component.min.js"></script>
    <script src="https://unpkg.com/aframe-proxy-event-component@2.1.0/dist/aframe-proxy-event-component.min.js"></script>
  
</head>
  <body> 

    <script>
          AFRAME.registerComponent('invisibleslide', {
          
            init: function () {
              // listen on button click and call actionchanged function
                   var data = this.data;
                  var el = this.el;  // <a-box>
                  el.setAttribute('visible',false)
                          
            },
          });
    </script>
    <script>
      const socket = io('http://localhost:3000')
          AFRAME.registerComponent('visibleslide-onclick', {
          
            init: function () {
              // listen on button click and call actionchanged function
              this.el.addEventListener('click', this.onButtonChange.bind(this));
              console.log("ayee")
              
            },
            onButtonChange: function () {
              socket.emit('nowloadslideshow');
              }
          });
          // on button clicked is noticed in the server then load the file
          socket.on('loadslideshow', function() {
            console.log("button slide clicked")
            var slides = document.querySelector('#slideh');
            slides.setAttribute('visible',true);
            slides.setAttribute('aframe-slideshow',"nbslides:5;folder:/assets/slides/;vidSlidesIndex:3;animSlidesIndex:5;nbColumns:1;distBetweenSlides:1;slideYPos:0;");
          });
    </script>

    <!-- open file onclick script -->
    <script>
      // const socket = io('http://localhost:3000')
          AFRAME.registerComponent('open-file-onclick', {
            // schema: {
            //   color: {default: 'red'}
            // },
          
            init: function () {
              // listen on button click and call actionchanged function
              this.el.addEventListener('click', this.onActionChange.bind(this));
              
            },
            onActionChange: function () {
              // onactionchange emit to server that it has been clicked
                socket.emit('fileloadmessage');
            }
          });

          // on button clicked is noticed in the server then load the file
          socket.on('loadFile', function() {

              var loader = new THREE.FileLoader();

                //load a text file and output the result to the console
                loader.load(
                  // resource URL
                  '/images/cd_catalog.xml',

                  // onLoad callback
                  function ( data ) {
                    // output the text to the console
                    var plane = document.querySelector('a-text');
                    plane.setAttribute('value', data);
                    // console.log( data )
                  },

                  // onProgress callback
                  function ( xhr ) {
                    console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
                  },

                  // onError callback
                  function ( err ) {
                    console.error( 'An error happened' );
                  }
                );
          });
    </script>
    <!-- end of file open script -->

 
    <!-- random position script to align the avatars -->
    <script>
        AFRAME.registerComponent('spawn-in-circle', {
            schema: {
            radius: {type: 'number', default: 1}
            },
        
            init: function() {
            var el = this.el;
            var center = el.getAttribute('position');
        
            var angleRad = this.getRandomAngleInRadians();
            var circlePoint = this.randomPointOnCircle(this.data.radius, angleRad);
            var worldPoint = {x: circlePoint.x + center.x, y: center.y, z: circlePoint.y + center.z};
            el.setAttribute('position', worldPoint);
        
            var angleDeg = angleRad * 180 / Math.PI;
            var angleToCenter = -1 * angleDeg + 90;
            var rotationStr = '0 ' + angleToCenter + ' 0';
            el.setAttribute('rotation', rotationStr);
            },
        
            getRandomAngleInRadians: function() {
            return Math.random()*Math.PI*2;
            },
        
            randomPointOnCircle: function (radius, angleRad) {
            x = Math.cos(angleRad)*radius;
            y = Math.sin(angleRad)*radius;
            return {x: x, y: y};
            }
        });
    </script>
    <!-- end of random position script -->

    <script>
      AFRAME.registerComponent('foo', {

      init: function () {
        var data = this.data;
        var el = this.el;
        el.addEventListener('click', this.onButtonChange.bind(this));
        var slides = ('<%= slides %>').split(" ")
        var superslides = slides[0].split(",")
        var co = '<%= itemnumber %>'

        // console.log([slides].length)
        for(let i =0;i<co;i++){

         
            // var slides = document.querySelector('#city-thumb');
            // superslides[i]

            var linksd = "/assets/ownslidespres/"+superslides[i]
            var sceneEl = document.querySelector('a-scene');
            var entityEl = document.createElement('a-box');
            entityEl.setAttribute('src',linksd)
            sceneEl.appendChild(entityEl);
            // if(i < '<%= itemnumber %>'){
            //   slides.setAttribute('src',linksd);
            //   console.log(slides)
            //   console.log('<p>hi i am'+superslides[i]+'see me?')
            //   if(i === '<%= itemnumber %>'){break}
            // }
        }
      },
      onButtonChange: function(){

      }
    });
    </script>
      <!-- initializing scene and network component -->
    <a-scene networked-scene="app:myApp;
    room:room1;
    adapter: webrtc;
    audio: true;
    debug:true;" >
        <a-assets>
          <img id="skyTexture" crossorigin="anonymous" src="/images/sky.jpg">

          <!-- <img id="city-thumb" crossorigin="anonymous">

        <!-- Image link template to be reused.--
        <script id="link" type="text/html">
          <a-entity class="link"
            geometry="primitive: box; height: 1; width: 1"
            material="shader: flat; src: ${thumb}"
            ></a-entity>
        </script>  -->
            <!-- Player avatar -->
            <template id="player-template">
                <a-entity networked-audio-source></a-entity>
            </template>
    
            <!-- Head of avatar -->
            <template id="head-template">
                <a-entity class="avatar">
                  <!-- name of player avatar -->
                   <a-text class="avatarname"
                   value="<%= username %>" 
                   side="front"
                   position="1 0.6 -0.6"
                   rotation = "0 180 0"
                   color="white"
                   scale="1.5 1.5 0">
                   </a-text>
                    <!-- head of avatar -->
                    <a-sphere class="head"
                        color="blue"
                        scale="0.45 0.5 0.4"
                    ></a-sphere>
                    <!-- face of avatar -->
                    <a-entity class="face"
                        position="0 0.05 0"
                    >
                    <!-- eye of avatar -->
                        <a-sphere class="eye"
                        color="#efefef"
                        position="0.16 0.1 -0.35"
                        scale="0.12 0.12 0.12"
                        >
                        <!-- pupil of avatar -->
                        <a-sphere class="pupil"
                            color="#000"
                            position="0 0 -1"
                            scale="0.2 0.2 0.2"
                        ></a-sphere>
                        </a-sphere>
                        <!-- eye of avatar -->
                        <a-sphere class="eye"
                        color="#efefef"
                        position="-0.16 0.1 -0.35"
                        scale="0.12 0.12 0.12"
                        >
                        <!-- pupil of avatar -->
                        <a-sphere class="pupil"
                            color="#000"
                            position="0 0 -1"
                            scale="0.2 0.2 0.2"
                        > </a-sphere>
                        </a-sphere>
                      <!-- end of eye section -->
                    </a-entity>
                    <!-- end of face section -->
                </a-entity>
            </template>
            <!-- end of head -->

            <!-- hand template -->
            <template id="left-hand-template">
                <a-entity>
                    <a-box  color="red" position="1 -1 0"
                    scale="0.3 0.3 0.3"></a-box>
                </a-entity>
            </template>

            <template id="right-hand-template">
                <a-entity>
                    <a-box  color="red" position="-1 -1 0"
                    scale="0.3 0.3 0.3"></a-box>
                </a-entity>
            </template>
            <!-- end of hand template -->

        </a-assets>

        <!-- 360-degree image. -->
        <a-sky id="image-360" radius="10" src="#skyTexture"
        animation__fade="property: components.material.material.color; type: color; from: #FFF; to: #000; dur: 300; startEvents: fade"
        animation__fadeback="property: components.material.material.color; type: color; from: #000; to: #FFF; dur: 300; startEvents: animationcomplete__fade"></a-sky>


        <!-- avatar start -->
        <a-entity  id="camParent acamera" camera wasd-controls look-controls movement-controls="fly: true" networked="template:#player-template;attachTemplateToLocal:false;" spawn-in-circle="radius:3" position="0 2.6 0">
            <a-entity id="came"    networked="template:#head-template;attachTemplateToLocal:false;">
                <a-sphere class="head"
                  random-color
                  visible="false"></a-sphere>

                <!-- user cursor to screen -->
                <a-gui-cursor id="cursor"
                raycaster="objects: [gui-interactable]"
                fuse="false">
                <!-- end of user cursor to screen -->
            </a-entity>
            
            <!-- hand controls -->
            <a-entity oculus-go-controls teleport-controls="cameraRig: #camParent; teleportOrigin: #camParent;" hand-controls="right" networked="template:#left-hand-template;">
                                     <!-- user cursor to screen -->
                                     <a-gui-cursor id="cursor"
                                     raycaster="objects: [gui-interactable]"
                                     fuse="false">
                                     <!-- end of user cursor to screen -->
            </a-entity>
            <a-entity oculus-go-controls  teleport-controls="cameraRig: #camParent; teleportOrigin: #camParent;" hand-controls="right" networked="template:#right-hand-template;"  >
                                     <!-- user cursor to screen -->
                                     <a-gui-cursor id="cursor"
                                     raycaster="objects: [gui-interactable]"
                                     fuse="false">
                                     <!-- end of user cursor to screen -->
            </a-entity>
            <!-- end of hand controls -->

        </a-entity>
        <!-- end of avatar -->

        <!-- start of common screen -->
        <a-text anchor="center" align="center" width="0.8" value="WELCOME TO DEVLIGENCE" geometry="primitive:plane;" position="2 4.5 -5" scale="5 5 1"></a-text>
        <!-- end of common screen -->

  <!-- start of gui file open button  -->
      <a-gui-button 
      width="2.5" height="0.75"
      onclick="" key-code="32"
      value="Open random file"
      font-family="Arial"
      margin="0 0 0.05 0" open-file-onclick='' position="0 3.5 -5"
       >
    </a-gui-button>
 <!-- end of gui file open button -->

  <!-- start of gui start slideshow button -->
  <a-gui-button 
        width="2.5" height="0.75"
        onclick="" key-code="32"
        value="Start Slideshow"
        font-family="Arial"
        margin="0 0 0.05 0" visibleslide-onclick='' position="5 3.5 -5"
        >
  </a-gui-button>
  <!-- end of gui slideshow button -->

  <!-- slideshow components -->
     <!-- <div id="loaderDiv" class="dialog-container make-container--visible" visible="false">
        <img class="loader" src="public/assets/icons/loader.gif" />
      </div>
      <a-plane position="-3 4.5 -5">
        <a-entity color="transparent" id="slideh" invisibleslide=''></a-entity>
      </a-plane> -->
  <!-- end of slideshow components -->

  <!-- <a-entity foo ><a-box></a-box></a-entity> -->
  <a-gui-button 
		width="2.5" height="0.75"
		onclick="" key-code="32"
		value="test button"
		font-family="Arial"
		margin="0 0 0.05 0"
    foo position="2.5 3.5 -5">
  </a-gui-button>
  
  
    <% if(hasfiles){ %>

          
    <% } %>
    
     <!-- Image links. -->
     <!-- <a-entity id="links" layout="type: line; margin: 1.5" position="0 -1 -4">
       <a-entity template="src: #link" data-src="#city" data-thumb="#city-thumb"></a-entity>
    </a-entity> -->
  </a-scene>
    <!-- end of scene -->
  </body>
</html>