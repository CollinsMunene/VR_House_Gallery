<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset="utf-8" />
  <title>Check this</title>
  <script src="https://aframe.io/releases/0.7.0/aframe.min.js"></script>
  <script src="//cdn.rawgit.com/donmccurdy/aframe-extras/v4.1.2/dist/aframe-extras.min.js"></script>
  <script src="https://unpkg.com/aframe-sharedspace-component@1.0.1/dist/aframe-sharedspace-component.min.js"></script>
  <script src="https://unpkg.com/aframe-event-set-component@5/dist/aframe-event-set-component.min.js"></script>
  <script src="https://unpkg.com/aframe-layout-component@5.3.0/dist/aframe-layout-component.min.js"></script>
  <script src="https://unpkg.com/aframe-template-component@3.2.1/dist/aframe-template-component.min.js"></script>
  <script src="https://unpkg.com/aframe-proxy-event-component@2.1.0/dist/aframe-proxy-event-component.min.js"></script>
  <script src="https://unpkg.com/aframe-motion-capture-components/dist/aframe-motion-capture-components.min.js"></script>
  <script src="https://unpkg.com/aframe-environment-component/dist/aframe-environment-component.min.js"></script>
  
  <script src="https://rawgit.com/oscarmarinmiro/aframe-video-controls/master/dist/aframe-video-controls.min.js"></script>  
  <script src="https://unpkg.com/aframe-render-order-component@1.0.0/dist/aframe-render-order-component.min.js"></script> 
  <!-- <script src="/javascripts/components.js"></script> -->
  <script src="https://rawgit.com/rdub80/aframe-gui/master/dist/aframe-gui.min.js"></script>
  <link rel="stylesheet" href="./style.css"/>
</head>
<body>
  <script>
    AFRAME.registerComponent('open-file-onclick', {
    // schema: {
    //   color: {default: 'red'}
    // },
  
    init: function () {
      // var data = this.data;
      // var el = this.el;  // <a-box>
      // var defaultColor = el.getAttribute('material').color;
  
      this.el.addEventListener('click', function () {
        var loader = new THREE.FileLoader();

        //load a text file and output the result to the console
        loader.load(
          // resource URL
          '/images/cd_catalog.xml',

          // onLoad callback
          function ( data ) {
            // output the text to the console
            var plane = document.querySelector('a-text');
            plane.setAttribute('value', data);
            console.log( data )
          },

          // onProgress callback
          function ( xhr ) {
            console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
          },

          // onError callback
          function ( err ) {
            console.error( 'An error happened' );
          }
        );

      });

      
      
  
      // el.addEventListener('mouseleave', function () {
      //   el.setAttribute('color', defaultColor);
      // });
    }
  });

  AFRAME.registerComponent('upload-file-onclick', {
    // schema: {
    //   color: {default: 'red'}
    // },
  
    init: function () {
      // var data = this.data;
      // var el = this.el;  // <a-box>
      // var defaultColor = el.getAttribute('material').color;
  
      this.el.addEventListener('click', function () {

        // var loader = new THREE.FileLoader();

        // //load a text file and output the result to the console
        // loader.load(
        //   // resource URL
        //   '/images/cd_catalog.xml',

        //   // onLoad callback
        //   function ( data ) {
        //     // output the text to the console
        //     console.log( data )
        //   },

        //   // onProgress callback
        //   function ( xhr ) {
        //     console.log( (xhr.loaded / xhr.total * 100) + '% loaded' );
        //   },

        //   // onError callback
        //   function ( err ) {
        //     console.error( 'An error happened' );
        //   }
        // );
        // el.setAttribute('color', data.color);
        // window.open("https://www.w3schools.com");
        // fs.appendFile('mynewfile1.txt', 'Hello content!', function (err) {
        //   if (err) throw err;
        //   alert('saved')
        // });
        // var x = document.createElement("INPUT");
        // x.setAttribute("type", "file");
        // document.body.appendChild(x);
        // alert("clicked")
      });

      
      
  
      // el.addEventListener('mouseleave', function () {
      //   el.setAttribute('color', defaultColor);
      // });
    }
  });

  </script>
  <!-- <a class="hide" href="#">Hide</a> -->
  <!-- <section class="instructions">
    <!-- <h1>Check this</h1>
    <p> --
      <!-- Grant this site permission to access your microphone and share the following link  with your friends (or open it in another browser/tab). 
        Wait for a friend to start chatting. --
    </p>
    <span class="link" style="display:none"></span>
    <!-- <a class="move" href="./">Move to another room.</a> --
  </section> -->
  <span class="link" style="display:none"></span>
  <a-scene>
    <a-assets>
      <img id="skyTexture" crossorigin="anonymous" src="/images/outdoor.jpeg">
      <video id="video_1" autoplay loop="true" src="/images/video1.mp4"></video>
    </a-assets>
    <a-entity sharedspace="audio: true; hold: true" avatars>

        <!-- 360-degree image. -->
        <a-sky id="image-360" radius="10" src="#skyTexture"
        animation__fade="property: components.material.material.color; type: color; from: #FFF; to: #000; dur: 300; startEvents: fade"
        animation__fadeback="property: components.material.material.color; type: color; from: #000; to: #FFF; dur: 300; startEvents: animationcomplete__fade"></a-sky>

      
        <!-- Using the asset management system. -->
        <!-- <a-video src="#video_1" width="16" height="9" position="0 8 -20" scale="1 1 1"></a-video> -->
      
        <!-- Defining the URL inline. Not recommended but more comfortable for web developers. -->
        <!-- <a-video src="video1.mp4"></a-video> -->
  
        <!-- <a-entity video-controls="src:#video_1" position="0 0 0" ></a-entity> -->
        <!-- <a-box color="white" position="0 3.5 -5" open-file-onclick=''></a-box> -->
        <a-box color="black" position="0 3.5 -9" upload-file-onclick=''></a-box>
        <a-box color="grey" position="0 0.2 -1.9" ></a-box>

        <a-gui-button 
        width="2.5" height="0.75"
        onclick="" key-code="32"
        value="Open random file"
        font-family="Arial"
        margin="0 0 0.05 0" open-file-onclick='' position="0 3.5 -5"
         >
      </a-gui-button>
           <!-- <a-plane position="0 8 -20"></a-plane> -->
        <a-text anchor="center" align="center" width="0.8" value="WELCOME TO DEVLIGENCE" geometry="primitive:plane" position="-5.5 3.5 -5" scale="5 5 1"></a-text>
        
      <!-- Table -->
      <a-cylinder class="table"
                  position="0 0.8 -1.9"
                  height="0.02" color="#00FFFFFF"
                  segments-height="1" segments-radial="6">
      </a-cylinder>

    </a-entity>

    <a-camera>
      <a-gui-cursor id="cursor"
      raycaster="objects: [gui-interactable]"
      fuse="false">

      <!-- <a-cursor></a-cursor> -->
    </a-camera>
  </a-scene>
  <%if (hassess) { %>
    <template>
      <a-entity>
        <a-entity class="person" obj-model="obj: url(https://cdn.glitch.com/4e53a88a-96d2-46e5-ab4b-f8f1b9c2d486%2Fface.obj?1506059732633)" rotation="0 180 0" scale="0.01 0.01 0.01">
          <a-entity
          text="value: <%= username %>; color: black" position="200 47 0"
          scale="600 600 600">
       </a-entity>
        <!--
        Anime Face Model Stocking(https://sketchfab.com/models/d049b6a85d204057b170ef9dbc851200) by stocking(https://sketchfab.com/stocking) is licensed under CC Attribution(http://creativecommons.org/licenses/by/4.0/)
        -->
  
      </a-entity>
    </template>
    <% } %>
  <script>
    
    // var hideButton = document.querySelector('.hide');
    // var instructions = document.querySelector('.instructions');
    // hideButton.onclick = function (evt) {
    //   instructions.classList.toggle('hidden');
    //   this.textContent = instructions.classList.contains('hidden') ? 'Show': 'Hide';
    //   return false;
    // };
    
    var scene = document.querySelector('a-scene');
    var room = document.querySelector('[sharedspace]');
    var table = document.querySelector('.table');

    // Make the avatar to look at the center of the table.
    room.addEventListener('avataradded', function onAdded(evt) {
      
      // Fixing should happen after the avatar fully loads.
      // Only then, it is safe to alter the avatarâ€™s components.
      var avatar = evt.detail.avatar;
      if (!avatar.hasLoaded) {
        avatar.addEventListener('loaded', onAdded.bind(null, evt));
        return;
      }
      
      var tablePosition = table.getAttribute('position');
      var avatarY = avatar.getAttribute('position').y;
      avatar.object3D.lookAt(new THREE.Vector3(
        tablePosition.x, avatarY, tablePosition.z
      ));

      // It is not enough to modify the underlaying Three object. It is
      // neccessary to use the A-Frame API for the sharedspace component to
      // be able of serialize the rotation correctly.
      var radToDeg = THREE.Math.radToDeg;
      var rotation = avatar.object3D.rotation;
      rotation.y += Math.PI;
      
      avatar.setAttribute('rotation', {
        x: radToDeg(rotation.x),
        y: radToDeg(rotation.y),
        z: radToDeg(rotation.z)
      });
      
    });

    // Create a new room or join one.
    let roomName = window.location.search.substr(1);
    if (!roomName) {
      roomName = 'room-' + Date.now();
      history.pushState({}, '', window.location + `?${roomName}`);
    }
    else {
      // hideButton.click();
    }
    connect();

    function connect() {
      if (!scene.hasLoaded) {
        scene.addEventListener('loaded', connect);
        return;
      }
      room.setAttribute('sharedspace', { room: roomName, hold: false });
    }

    // Select link on click.
    var link = document.querySelector('.link');
    link.textContent = window.location.href;
    link.onclick = function () {
      var range = document.createRange();
      range.selectNode(link);
      var selection = document.getSelection();
      selection.empty();
      selection.addRange(range);
    };

  </script>
</body>
</html>
