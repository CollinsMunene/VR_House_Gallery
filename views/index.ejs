<!DOCTYPE html>
<html>
<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta charset="utf-8" />
  <title>Check this</title>
  <script src="https://aframe.io/releases/0.7.0/aframe.min.js"></script>
  <script src="https://unpkg.com/aframe-sharedspace-component@1.0.1/dist/aframe-sharedspace-component.min.js"></script>
  <link rel="stylesheet" href="./style.css"/>
</head>
<body>
  <a class="hide" href="#">Hide</a>
  <!-- <section class="instructions">
    <!-- <h1>Check this</h1>
    <p> --
      <!-- Grant this site permission to access your microphone and share the following link  with your friends (or open it in another browser/tab). 
        Wait for a friend to start chatting. --
    </p>
    <span class="link" style="display:none"></span>
    <!-- <a class="move" href="./">Move to another room.</a> --
  </section> -->
  <span class="link" style="display:none"></span>
  <a-scene>
    <a-assets>
      <img id="skyTexture" src="/images/office1.jpeg">
    </a-assets>
    <a-entity sharedspace="audio: true; hold: true" avatars>
      <!-- <a-cylinder id="ground" src="#groundTexture" radius="32" height="0.1"></a-cylinder> -->

      <!-- Room -->
      <a-sky src="#skyTexture" width= "0.5"></a-sky>
      <!-- <a-plane rotation="-90 0 0"
               width="15" height="15" color="#777">
      </a-plane> -->

      <!-- Table -->
      <a-cylinder class="table"
                  position="0 0.8 0"
                  height="0.02" color="#00FFFFFF"
                  segments-height="1" segments-radial="6">
      </a-cylinder>

    </a-entity>
  </a-scene>
  <%if (hassess) { %>
    <template>
      <a-entity>
        <a-entity obj-model="obj: url(https://cdn.glitch.com/4e53a88a-96d2-46e5-ab4b-f8f1b9c2d486%2Fface.obj?1506059732633)" rotation="0 180 0" scale="0.01 0.01 0.01">
          <a-entity
          text="value: <%= username %>; color: black" position="200 47 0"
          scale="600 600 600"></a-entity>
        </a-entity>
      
        <!--
        Anime Face Model Stocking(https://sketchfab.com/models/d049b6a85d204057b170ef9dbc851200) by stocking(https://sketchfab.com/stocking) is licensed under CC Attribution(http://creativecommons.org/licenses/by/4.0/)
        -->
  
      </a-entity>
    </template>
    <% } %>

  <script>
    
    var hideButton = document.querySelector('.hide');
    var instructions = document.querySelector('.instructions');
    hideButton.onclick = function (evt) {
      instructions.classList.toggle('hidden');
      this.textContent = instructions.classList.contains('hidden') ? 'Show': 'Hide';
      return false;
    };
    
    var scene = document.querySelector('a-scene');
    var room = document.querySelector('[sharedspace]');
    var table = document.querySelector('.table');

    // Make the avatar to look at the center of the table.
    room.addEventListener('avataradded', function onAdded(evt) {
      
      // Fixing should happen after the avatar fully loads.
      // Only then, it is safe to alter the avatarâ€™s components.
      var avatar = evt.detail.avatar;
      if (!avatar.hasLoaded) {
        avatar.addEventListener('loaded', onAdded.bind(null, evt));
        return;
      }
      
      var tablePosition = table.getAttribute('position');
      var avatarY = avatar.getAttribute('position').y;
      avatar.object3D.lookAt(new THREE.Vector3(
        tablePosition.x, avatarY, tablePosition.z
      ));

      // It is not enough to modify the underlaying Three object. It is
      // neccessary to use the A-Frame API for the sharedspace component to
      // be able of serialize the rotation correctly.
      var radToDeg = THREE.Math.radToDeg;
      var rotation = avatar.object3D.rotation;
      rotation.y += Math.PI;
      
      avatar.setAttribute('rotation', {
        x: radToDeg(rotation.x),
        y: radToDeg(rotation.y),
        z: radToDeg(rotation.z)
      });
      
    });

    // Create a new room or join one.
    let roomName = window.location.search.substr(1);
    if (!roomName) {
      roomName = 'room-' + Date.now();
      history.pushState({}, '', window.location + `?${roomName}`);
    }
    else {
      hideButton.click();
    }
    connect();

    function connect() {
      if (!scene.hasLoaded) {
        scene.addEventListener('loaded', connect);
        return;
      }
      room.setAttribute('sharedspace', { room: roomName, hold: false });
    }

    // Select link on click.
    var link = document.querySelector('.link');
    link.textContent = window.location.href;
    link.onclick = function () {
      var range = document.createRange();
      range.selectNode(link);
      var selection = document.getSelection();
      selection.empty();
      selection.addRange(range);
    };

  </script>
</body>
</html>
